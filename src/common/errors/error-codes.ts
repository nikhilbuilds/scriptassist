/**
 * Centralized error codes for consistent error handling across the application
 */
export enum ErrorCode {
  // Authentication errors
  AUTH_INVALID_CREDENTIALS = 'AUTH_INVALID_CREDENTIALS',
  AUTH_TOKEN_INVALID_TYPE = 'AUTH_TOKEN_INVALID_TYPE',
  AUTH_USER_NOT_FOUND = 'AUTH_USER_NOT_FOUND',
  AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED',
  AUTH_REQUIRED = 'AUTH_REQUIRED',

  // User errors
  USER_NOT_FOUND = 'USER_NOT_FOUND',
  USER_SELF_VIEW_ONLY = 'USER_SELF_VIEW_ONLY',
  USER_SELF_UPDATE_ONLY = 'USER_SELF_UPDATE_ONLY',
  USER_ROLE_CHANGE_FORBIDDEN = 'USER_ROLE_CHANGE_FORBIDDEN',
  USER_ROLE_SUPER_ADMIN_FORBIDDEN = 'USER_ROLE_SUPER_ADMIN_FORBIDDEN',
  USER_EMAIL_ALREADY_EXISTS = 'USER_EMAIL_ALREADY_EXISTS',
  USER_PASSWORD_INVALID = 'USER_PASSWORD_INVALID',
  USER_EMAIL_VERIFICATION_NOT_IMPLEMENTED = 'USER_EMAIL_VERIFICATION_NOT_IMPLEMENTED',

  // Task errors
  TASK_NOT_FOUND = 'TASK_NOT_FOUND',
  TASK_NOT_OWNED = 'TASK_NOT_OWNED',
  TASKS_NOT_FOUND = 'TASKS_NOT_FOUND',
  TASKS_DELETE_PERMISSION_DENIED = 'TASKS_DELETE_PERMISSION_DENIED',

  // Authorization errors
  FORBIDDEN_INSUFFICIENT_PERMISSIONS = 'FORBIDDEN_INSUFFICIENT_PERMISSIONS',

  // Validation errors
  VALIDATION_FAILED = 'VALIDATION_FAILED',
}
